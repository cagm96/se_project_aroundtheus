!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:o}=e;this._name=n,this._link=o,this._cardSelector=t,this._handleImageClick=s}testLine;_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__overlay-button").addEventListener("click",(()=>{this._handleImageButton()}))}_handleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleImageButton(){this._handleImageClick(this._name,this._link)}_getElement(){return this._cardSelector.content.querySelector(".card").cloneNode(!0)}getView(){this._cardElement=this._getElement();const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){const e=this._form.querySelectorAll(this._inputSelector),t=this._form.querySelector(this._submitButtonSelector);this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(e){return Array.from(e).some((e=>!e.validity.valid))}_setEventListeners(){this._form.querySelectorAll(this._inputSelector).forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close")}_handleEscClose=e=>{"Escape"===e.key&&this.close()};open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_open")&&this.close(),e.target.classList.contains("modal__close")&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._submitButton=this._popupElement.querySelector(".modal__button"),this._form=this._popupElement.querySelector(".modal__form")}_getInputValues(){const e=[...this._popupElement.querySelectorAll("input")],t={};for(const s of e)t[s.name]=s.value;return t}close(){super.close(),this._form.reset()}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this.close()})),super.setEventListeners()}}const o=document.querySelector("#card-template"),r=document.querySelector("#profile-edit-button"),i=document.forms.modal__form,l=i.querySelector("#profile-title-input"),a=i.querySelector("#profile-description-Input"),c=document.querySelector(".cards__list"),u=document.querySelector(".profile__add-button"),_=document.querySelector("#add-card-modal").querySelector(".modal__form"),d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};new t(d,i).enableValidation();const m=new t(d,_);m.enableValidation();const h=new class extends s{constructor(e){super(e),this._imageFull=this._popupElement.querySelector(".modal__image"),this._modalTitle=this._popupElement.querySelector(".modal__image-title")}test(){console.log(this.popupElement)}open(e,t){this._modalTitle.textContent=e,this._imageFull.setAttribute("src",t),this._imageFull.setAttribute("alt",e),super.open()}}("#image-modal");h.setEventListeners();const p=new n("#add-card-modal",(function(e){const t=e.title,s=e.url;v.addItem({name:t,link:s}),m.toggleButtonState(),p.close()}));p.setEventListeners();const E=new class{constructor(e,t){this._profileName=document.querySelector(e),this._job=document.querySelector(t)}getUserInfo(){return{profileName:this._profileName.textContent,profileJob:this._job.textContent}}setUserInfo(e){this._profileName.textContent=e.title,this._job.textContent=e.description}}(".profile__title",".profile__description"),f=new n("#profile-edit-modal",(function(e){E.setUserInfo(e),f.close()})),v=new class{constructor(e,t,s){this._items=e,this._renderer=t,this._container=s}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this._container.append(t)}))}addItem(e){let{name:t,link:s}=e;const n=this._renderer({name:t,link:s});this._container.prepend(n)}}([{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],(function(t){return new e(t,o,S).getView()}),c);function S(e,t){h.open(e,t)}v.renderItems(),f.setEventListeners(),r.addEventListener("click",(()=>{f.open();const{profileName:e,profileJob:t}=E.getUserInfo();l.value=e,a.value=t})),u.addEventListener("click",(()=>{p.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,